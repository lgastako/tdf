# the GHC version of this resolver needs to match the GHC version in Dockerfile
resolver: lts-18.19
allow-newer: true

flags: {}
packages:
    - .
    - ./ipython-kernel
    - ./ghc-parser
    - ./ihaskell-display/ihaskell-aeson
    - ./ihaskell-display/ihaskell-blaze
    - ./ihaskell-display/ihaskell-charts
    - ./ihaskell-display/ihaskell-diagrams
    - ./ihaskell-display/ihaskell-gnuplot
    - ./ihaskell-display/ihaskell-graphviz
    - ./ihaskell-display/ihaskell-hatex
    - ./ihaskell-display/ihaskell-juicypixels
    - ./ihaskell-display/ihaskell-magic
    - ./ihaskell-display/ihaskell-plot
    # - ./ihaskell-display/ihaskell-static-canvas
    - ./ihaskell-display/ihaskell-widgets

extra-deps:
- active-0.2.0.14
- Chart-cairo-1.9.3
- diagrams-1.4
- diagrams-cairo-1.4.1.1
- diagrams-contrib-1.4.4
- diagrams-core-1.5.0
- diagrams-lib-1.4.4
- diagrams-svg-1.4.3
- cairo-0.13.8.1
- pango-0.13.8.1
- glib-0.13.8.1
- gtk2hs-buildtools-0.13.8.0
- plot-0.2.3.11
# - static-canvas-0.2.0.3
- statestack-0.3
- dual-tree-0.2.2.1
- monoid-extras-0.6
- svg-builder-0.1.1
- force-layout-0.4.0.6

- /tdf
- row-types-1.0.1.2@sha256:5c56e91d30b61f275eaee0d97b015d5332d95d7599e57582d6e62a43aa388087,2948

ghc-options:
  # Eventually we want "$locals": -Wall -Wpartial-fields -Werror
  # ghc-parser: -Wall -Wpartial-fields -Werror
  # ihaskell: -Wall -Wpartial-fields -Werror
  # ihaskell-widgets: -Wall -Wpartial-fields -Werror

nix:
  enable: false
  packages:
    - blas
    - cairo
    - file
    - gcc
    - gfortran.cc.lib
    - liblapack
    - ncurses
    - pango
    - pkgconfig
    - zeromq
    - zlib


# # Stack global project /opt/stack/global-project/stack.yaml in the Docker image.
# # https://docs.haskellstack.org/en/stable/yaml_configuration/#yaml-configuration

# # All the IHaskell packages are listed as extra-deps rather than packages,
# # because we never want to build anything automatically, we always want to
# # select exactly what we build for the IHaskell notebook environment.
# # For example, `stack ghci` tries to load every package listed in `packages`,
# # and we don't want that behavior. Several of these packages are unbuildable
# # at the time of this writing. See the Dockerfile for the list of packages
# # which are pre-built into the Docker image.
# #
# # To make an notebook project with custom `stack.yaml`, copy this `stack.yaml`
# # file into the project directory that has the `.ipynb` notebook file and
# # then make changes to the copied `stack.yaml`.

# packages:
# - .

# extra-deps:
# #- /opt/IHaskell
# - /opt/IHaskell/ipython-kernel
# - /opt/IHaskell/ghc-parser
# - /opt/IHaskell/ihaskell-display/ihaskell-aeson
# - /opt/IHaskell/ihaskell-display/ihaskell-blaze
# - /opt/IHaskell/ihaskell-display/ihaskell-charts
# - /opt/IHaskell/ihaskell-display/ihaskell-diagrams
# - /opt/IHaskell/ihaskell-display/ihaskell-gnuplot
# - /opt/IHaskell/ihaskell-display/ihaskell-graphviz
# - /opt/IHaskell/ihaskell-display/ihaskell-hatex
# - /opt/IHaskell/ihaskell-display/ihaskell-juicypixels
# - /opt/IHaskell/ihaskell-display/ihaskell-magic
# - /opt/IHaskell/ihaskell-display/ihaskell-plot
# - /opt/IHaskell/ihaskell-display/ihaskell-rlangqq
# - /opt/IHaskell/ihaskell-display/ihaskell-static-canvas
# - /opt/IHaskell/ihaskell-display/ihaskell-widgets
# - /opt/hvega/hvega
# - /opt/hvega/ihaskell-hvega
# - /tdf

# # extra-deps from IHaskell/stack.yaml
# - active-0.2.0.14
# - Chart-cairo-1.9.3
# - diagrams-1.4
# - diagrams-cairo-1.4.1.1
# - diagrams-contrib-1.4.4
# - diagrams-core-1.5.0
# - diagrams-lib-1.4.4
# - diagrams-svg-1.4.3
# - cairo-0.13.8.1
# - pango-0.13.8.1
# - glib-0.13.8.1
# - gtk2hs-buildtools-0.13.8.0
# - magic-1.1
# - plot-0.2.3.11
# # - static-canvas-0.2.0.3
# - statestack-0.3
# - vinyl-0.13.0
# - dual-tree-0.2.2.1
# - monoid-extras-0.6
# - svg-builder-0.1.1
# - force-layout-0.4.0.6

# - row-types-1.0.1.2@sha256:5c56e91d30b61f275eaee0d97b015d5332d95d7599e57582d6e62a43aa388087,2948

# # Resolver copied from IHaskell/stack.yaml, see the Dockerfile.
# resolver: lts-18.19
